'' =================================================================================================
''
''   File....... test_pasm_snips.spin2
''   Purpose.... Demonstrate working snippets of pasm2
''   Authors.... Stephen M Moraco
''               -- Copyright (c) 2022 Iron Sheep Productions, LLC
''               -- see below for terms of use
''   E-mail..... stephen@ironsheep.biz
''   Started.... Mar 2022
''   Updated.... 7 Mar 2022
''
'' =================================================================================================

CON { timing }

  CLK_FREQ = 270_000_000                                        ' system freq as a constant
  _clkfreq = CLK_FREQ                                           ' set system clock

CON { fixed io pins }

  RX1      = 63  { I }                                          ' programming / debug
  TX1      = 62  { O }

  SF_CS    = 61  { O }                                          ' serial flash
  SF_SCK   = 60  { O }
  SF_SDO   = 59  { O }
  SF_SDI   = 58  { I }

OBJ { our Motor(s) }

    'user    :   "isp_bldc_motor_userconfig"     ' driver configuration
    'tvDebug :   "isp_hdmi_debug"    ' the single BLDC motor
    'wheel   :   "isp_bldc_motor"    ' the single BLDC motor
DAT
    tStr    byte    "TRUE",0
    fStr    byte    "false",0

PUB main() | bResult, nLHS, nRHS, pStr
'' DEMO Run Snippets

    debug("* checks for same sign:")
    nLHS := -2
    nRHS := +5
    bResult := isSameSign(nLHS, nRHS)
    showResult(bResult, nLHS, nRHS)
    ' start our HDMI debug output
    nLHS := -1
    nRHS := -6
    bResult := isSameSign(nLHS, nRHS)
    showResult(bResult, nLHS, nRHS)

    nLHS := +1
    nRHS := +7
    bResult := isSameSign(nLHS, nRHS)
    showResult(bResult, nLHS, nRHS)

    nLHS := +1
    nRHS := -8
    bResult := isSameSign(nLHS, nRHS)
    showResult(bResult, nLHS, nRHS)

    debug("* checks for LHS is smaller when same sign:")
    nLHS := -2
    nRHS := -5  ' larger
    bResult := isLhsSmaller(nLHS, nRHS)
    showResult(bResult, nLHS, nRHS)
    ' start our HDMI debug output
    nLHS := -6  ' larger
    nRHS := -2
    bResult := isLhsSmaller(nLHS, nRHS)
    showResult(bResult, nLHS, nRHS)

    nLHS := +1
    nRHS := +7  ' larger
    bResult := isLhsSmaller(nLHS, nRHS)
    showResult(bResult, nLHS, nRHS)

    nLHS := +8  ' larger
    nRHS := +1
    bResult := isLhsSmaller(nLHS, nRHS)
    showResult(bResult, nLHS, nRHS)

PRI showResult(result, lhs, rhs) | pStr
    pStr := (result) ? @tStr : @fStr
    debug("  - lt=", sdec_long_(lhs), ", rt=", sdec_long_(rhs), " => ", zstr_(pStr))

PRI isSameSign(lhs, rhs) : result
' are LHS and RHS of same sign?
    org
            mov     result, #0
            testb   lhs, #31  wc  ' find dual - signs
            testb   rhs, #31  andc
    if_c    mov     result, #1  wz
            testbn  lhs, #31  wc  ' find dual + signs
            testbn  rhs, #31  andc
    if_c    mov     result, #1
    end
    result := (result == 0) ? false: true

PRI isLhsSmaller(lhs, rhs) : result
' is LHS smaller then RHS?
    org
            mov     result, #0
            cmps    lhs, rhs  wcz
    if_c    mov     result, #1        ' CY=1: lhs is smaller
    end

    result := (result == 0) ? false: true

CON { license }
{{

 -------------------------------------------------------------------------------------------------
  MIT License

  Copyright (c) 2022 Iron Sheep Productions, LLC

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
 =================================================================================================
}}
